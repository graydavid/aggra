<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>io.github.graydavid</groupId>
    <artifactId>graydavid-style-parent</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <relativePath>../graydavid-style-parent/pom.xml</relativePath>
  </parent>
  <groupId>io.github.graydavid</groupId>
  <artifactId>aggra</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <name>${project.groupId}:${project.artifactId}</name>
  <description>Contains a framework for working with Aggregating Graphs of code.</description>
  <url>http://github.com/graydavid/${project.artifactId}</url>
  <scm>
    <connection>scm:git:git://github.com/graydavid/${project.artifactId}.git</connection>
    <developerConnection>scm:git:ssh://github.com:graydavid/${project.artifactId}.git</developerConnection>
    <url>http://github.com/graydavid/${project.artifactId}/tree/main</url>
   </scm>
  <dependencies>
    <dependency>
      <groupId>io.github.graydavid</groupId>
      <artifactId>n-ary-functions</artifactId>
      <version>0.0.1-SNAPSHOT</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>io.github.graydavid</groupId>
      <artifactId>one-more-try</artifactId>
      <version>0.0.1-SNAPSHOT</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava</artifactId>
      <version>30.1-jre</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-lang3</artifactId>
      <version>3.12.0</version>
        <scope>test</scope>
    </dependency>
  </dependencies>
  <build>
    <plugins>
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>check</id>
            <configuration>
              <rules>
                <rule>
                  <element>BUNDLE</element>
                  <limits>
                    <limit>
                      <counter>INSTRUCTION</counter>
                      <value>COVEREDRATIO</value>
                      <minimum>1.00</minimum>
                    </limit>
                    <!-- Unfortunately, the Reply.ResponsiveToCancelReply class has branches that are only hit probabilistically per test run.
                         Generating full coverage reliably is impossible given race conditions.
                         So, we must lower from 100% coverage to account for the worst case.  -->
                    <limit>
                      <counter>BRANCH</counter>
                      <value>COVEREDRATIO</value>
                      <minimum>0.98</minimum>
                    </limit>
                  </limits>
                </rule>
              </rules>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
</project>